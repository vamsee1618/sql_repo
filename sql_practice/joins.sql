-- BAX 421 002 
-- Homework-1
-- Vamsee Krishna Reddy Narahari

----- Colonial Database --------
-- QUESTION-1
SELECT
	TRIPNAME
FROM 
	COLONIAL.TRIP
WHERE
	UPPER(SEASON) LIKE "LATE SPRING";
 
 -- QUESTION 2
SELECT
	TRIPNAME
FROM
	COLONIAL.TRIP
WHERE
	UPPER(STATE) LIKE "VT" OR MAXGRPSIZE > 10;
    
-- QUESTION 3
SELECT
	TRIPNAME 
FROM
	COLONIAL.TRIP
WHERE
	UPPER(SEASON) IN ("LATE FALL", "EARLY FALL");

-- QUESTION 4
SELECT
	COUNT(*)
FROM 
	COLONIAL.TRIP
WHERE
	UPPER(STATE) IN ("CT","VT");

-- QUESTION 5
SELECT
	TRIPNAME
FROM 
	COLONIAL.TRIP
WHERE
	UPPER(STATE) NOT LIKE "NH";
    
-- QUESTION 6
SELECT
	TRIPNAME
    ,STARTLOCATION
FROM 	
	COLONIAL.TRIP
WHERE
	UPPER(TYPE) LIKE "BIKING";
    
-- QUESTION 7
SELECT
	TRIPNAME
FROM 	
	COLONIAL.TRIP
WHERE
	UPPER(TYPE) LIKE "HIKING"
    AND DISTANCE > 6
ORDER BY
	TRIPNAME;
    
-- QUESTION 8
SELECT
	TRIPNAME
FROM 	
	COLONIAL.TRIP
WHERE
	UPPER(TYPE) = "PADDLING"
    OR UPPER(STATE) = "VT";
    
-- QUESTION 9
SELECT
	COUNT(*)
FROM 	
	COLONIAL.TRIP
WHERE
	UPPER(TYPE) = "HIKING"
    OR UPPER(TYPE) = "BIKING";

-- QUESTION 10
SELECT
	TRIPNAME
    ,STATE
FROM 	
	COLONIAL.TRIP
WHERE
	UPPER(SEASON) LIKE "SUMMER" 
ORDER BY
	STATE
    ,TRIPNAME;

-- QUESTION 11
SELECT
	TRIPNAME
FROM 	
	COLONIAL.TRIP T
INNER JOIN 
	COLONIAL.TRIPGUIDES TG
ON 
	T.TRIPID = TG.TRIPID
INNER JOIN 
	COLONIAL.GUIDE G
ON 
	TG.GUIDENUM = G.GUIDENUM
WHERE
	UPPER(CONCAT(FIRSTNAME," ",LASTNAME)) LIKE "MILES ABRAMS";
	
-- QUESTION 12
SELECT
	TRIPNAME
FROM 	
	COLONIAL.TRIP T
INNER JOIN 
	COLONIAL.TRIPGUIDES TG
ON 
	T.TRIPID = TG.TRIPID
INNER JOIN 
	COLONIAL.GUIDE G
ON 
	TG.GUIDENUM = G.GUIDENUM
WHERE
	UPPER(CONCAT(FIRSTNAME," ",LASTNAME)) LIKE "RITA BOYERS"
    AND T.TYPE LIKE "BIKING";

-- QUESTION 13
SELECT
	C.LASTNAME
    ,T.TRIPNAME
    ,T.STARTLOCATION
FROM 	
	COLONIAL.RESERVATION R
INNER JOIN 
	COLONIAL.CUSTOMER C
ON 
	R.CUSTOMERNUM = C.CUSTOMERNUM
INNER JOIN 
	COLONIAL.TRIP T
ON 
	R.TRIPID = T.TRIPID
WHERE
	R.TRIPDATE LIKE "2018-07-23";

-- QUESTION 14
SELECT
	COUNT(*)
FROM 
	COLONIAL.RESERVATION
WHERE
	TRIPPRICE > 50 
    AND TRIPPRICE < 100;

-- QUESTION 15
SELECT
	C.LASTNAME
    ,T.TRIPNAME
    ,T.TYPE
FROM 	
	COLONIAL.RESERVATION R
INNER JOIN 
	COLONIAL.CUSTOMER C
ON 
	R.CUSTOMERNUM = C.CUSTOMERNUM
INNER JOIN 
	COLONIAL.TRIP T
ON 
	R.TRIPID = T.TRIPID
WHERE
	R.TRIPPRICE > 100;

-- QUESTION 16:
SELECT
	C.LASTNAME
FROM 	
	COLONIAL.RESERVATION R
INNER JOIN 
	COLONIAL.CUSTOMER C
ON 
	R.CUSTOMERNUM = C.CUSTOMERNUM
INNER JOIN 
	COLONIAL.TRIP T
ON 
	R.TRIPID = T.TRIPID
WHERE
	UPPER(T.STATE) LIKE "ME";

-- QUESTION 17
SELECT
	STATE
    ,COUNT(*)
FROM 
	COLONIAL.TRIP
GROUP BY
	STATE;

-- QUESTION 18
SELECT
	R.RESERVATIONID
    ,C.LASTNAME
    ,T.TRIPNAME
FROM 	
	COLONIAL.RESERVATION R
INNER JOIN 
	COLONIAL.CUSTOMER C
ON 
	R.CUSTOMERNUM = C.CUSTOMERNUM
INNER JOIN 
	COLONIAL.TRIP T
ON 
	R.TRIPID = T.TRIPID
WHERE
	UPPER(R.NUMPERSONS) > 4;

-- QUESTION 19
SELECT
	G.FIRSTNAME
    ,G.LASTNAME
FROM 
	COLONIAL.TRIP T
INNER JOIN
	COLONIAL.TRIPGUIDES TG
ON
	T.TRIPID = TG.TRIPID
INNER JOIN 
	COLONIAL.GUIDE G
ON
	G.GUIDENUM = TG.GUIDENUM
WHERE
	UPPER(T.STATE) = "NH"
ORDER BY
	T.TRIPNAME
	,G.LASTNAME;

-- QUESTION 20
SELECT
	R.RESERVATIONID
    ,C.CUSTOMERNUM
    ,C.LASTNAME
    ,C.FIRSTNAME
FROM 	
	COLONIAL.RESERVATION R
INNER JOIN 
	COLONIAL.CUSTOMER C
ON 
	R.CUSTOMERNUM = C.CUSTOMERNUM
WHERE
	R.TRIPDATE >= "2018-07-01" AND
    R.TRIPDATE <= "2018-07-31";

-- QUESTION 21
SELECT
	R.RESERVATIONID
    ,T.TRIPNAME
    ,C.LASTNAME
    ,C.FIRSTNAME
    ,(R.TRIPPRICE + R.OTHERFEES)*R.NUMPERSONS AS TOTALCOST
FROM 	
	COLONIAL.RESERVATION R
INNER JOIN 
	COLONIAL.CUSTOMER C
ON 
	R.CUSTOMERNUM = C.CUSTOMERNUM
INNER JOIN 
	COLONIAL.TRIP T
ON 
	R.TRIPID = T.TRIPID
WHERE
	R.NUMPERSONS > 4;

-- QUESTION 22
SELECT
	*
FROM 
	COLONIAL.CUSTOMER
WHERE
	UPPER(FIRSTNAME) LIKE "L%" 
    OR UPPER(FIRSTNAME) LIKE "S%";
    
-- QUESTION 23
SELECT
	DISTINCT T.TRIPNAME
FROM 	
	COLONIAL.RESERVATION R
INNER JOIN 
	COLONIAL.TRIP T
ON 
	R.TRIPID = T.TRIPID
WHERE
	R.TRIPPRICE >= 30
    AND R.TRIPPRICE <=50;
    
-- QUESTION 24
SELECT
	COUNT(*)
FROM 	
	COLONIAL.RESERVATION R
INNER JOIN 
	COLONIAL.TRIP T
ON 
	R.TRIPID = T.TRIPID
WHERE
	R.TRIPPRICE >= 30
    AND R.TRIPPRICE <=50;

-- QUESTION 25
SELECT
	T.TRIPID
    ,T.TRIPNAME
    ,R.RESERVATIONID
FROM 	
	COLONIAL.TRIP T
LEFT JOIN 
	COLONIAL.RESERVATION R
ON 
	R.TRIPID = T.TRIPID
WHERE
	R.RESERVATIONID IS NULL;

	
-- QUESTION 26
SELECT
 A.*, B.*
FROM
	COLONIAL.TRIP A
INNER JOIN
	COLONIAL.TRIP B
ON 
	A.STARTLOCATION = B.STARTLOCATION
AND
	A.TRIPID != B.TRIPID
AND
	A.TRIPID < B.TRIPID;

-- QUESTION 27
SELECT
	DISTINCT C.*
FROM
	COLONIAL.CUSTOMER C
LEFT JOIN 
	COLONIAL.RESERVATION R
ON
	C.CUSTOMERNUM = R.CUSTOMERNUM
WHERE
	UPPER(C.STATE) = "NJ"
    OR R.RESERVATIONID IS NOT NULL;

-- QUESTION 28
SELECT
	G.*
FROM 
	COLONIAL.GUIDE G
LEFT JOIN
	COLONIAL.TRIPGUIDES TG
ON
	G.GUIDENUM = TG.GUIDENUM
WHERE
	TG.TRIPID IS NULL;
    
-- QUESTION 29
SELECT
	*
FROM
	COLONIAL.GUIDE A
INNER JOIN
	COLONIAL.GUIDE B
ON 
	A.STATE = B.STATE
AND
	A.GUIDENUM != B.GUIDENUM
AND 
	A.GUIDENUM < B.GUIDENUM;

-- QUESTION 30
SELECT
	*
FROM
	COLONIAL.GUIDE A
INNER JOIN
	COLONIAL.GUIDE B
ON 
	A.CITY = B.CITY
AND
	A.GUIDENUM != B.GUIDENUM
AND
	A.GUIDENUM < B.GUIDENUM;

### ENTERTAINMENT AGENCY

#QUESTION 1
SELECT
	CONCAT(AGTFIRSTNAME," ",AGTLASTNAME) AS NAME
    ,AGTFIRSTNAME
    ,AGTLASTNAME
    ,AGTPHONENUMBER
FROM
	ENTERTAINMENTAGENCYEXAMPLE.AGENTS
ORDER BY
	AGTLASTNAME
    ,AGTFIRSTNAME;

#QUESTION 2
SELECT
	*
FROM
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS
ORDER BY
	STARTDATE DESC
    ,STARTTIME DESC
    ,ENGAGEMENTNUMBER;

#QUESTION 3
SELECT
	CONCAT(AGTFIRSTNAME," ",AGTLASTNAME) AS NAME
	,DATEHIRED
    ,DATE_ADD(DATEHIRED, INTERVAL 6 MONTH) AS PERFORMANCE_REVIEW_DATE
FROM
	ENTERTAINMENTAGENCYEXAMPLE.AGENTS;

#QUESTION 4
SELECT
	*
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS
WHERE
	(MONTH(STARTDATE) = 10 AND YEAR(STARTDATE)=2017) OR 
    (MONTH(ENDDATE) = 10 AND YEAR(ENDDATE)=2017);
    
#QUESTION 5
SELECT
	*
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS
WHERE
	(MONTH(STARTDATE) = 10 AND YEAR(STARTDATE)=2017 AND (STARTTIME BETWEEN '12:00:00' AND '17:00:00'));

#QUESTION 6
SELECT
	*
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS
WHERE
	STARTDATE=ENDDATE;

#QUESTION 7 AND 15
SELECT
	DISTINCT
	A.AGENTID AS AGENTID
	,CONCAT(A.AGTFIRSTNAME," ",A.AGTLASTNAME) AS AGENTNAME
    ,E.STARTDATE AS ENGAGEMENT_START_DATE
    ,E.ENDDATE AS ENGAGEMENT_END_DATE
FROM 	
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
INNER JOIN 	
	ENTERTAINMENTAGENCYEXAMPLE.AGENTS A
ON 
	E.AGENTID = A.AGENTID
ORDER BY
	E.STARTDATE;

#QUESTION 8 AND 16
SELECT
	DISTINCT
	C.*
    ,ENT.*
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
INNER JOIN
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS C
ON
	E.CUSTOMERID = C.CUSTOMERID
INNER JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
ON 
	E.ENTERTAINERID = ENT.ENTERTAINERID;

#QUESTION 9 AND 17
SELECT
	DISTINCT
	A.*
    ,ENT.*
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.AGENTS A
INNER JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
ON 
	A.AGTZIPCODE = ENT.ENTZIPCODE;
    
# QUESTION 10
SELECT
	ENTSTAGENAME
    ,ENTPHONENUMBER
    ,ENTCITY
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS 
WHERE
	UPPER(ENTCITY) IN ("BELLEVUE", "REDMOND", "WOODINVILLE")
ORDER BY
	ENTSTAGENAME
    ,ENTPHONENUMBER
    ,ENTCITY;

# QUESTION 11
SELECT
	*
FROM 	
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS
WHERE
	(DATEDIFF(ENDDATE,STARTDATE)+1) = 4;

#QUESTION 12 AND 13
SELECT
	DISTINCT
	ENT.*
    ,E.STARTDATE AS CONTRACT_START_DATE
    ,E.ENDDATE AS CONTRACT_END_DATE
    ,E.CONTRACTPRICE AS CONTRACT_PRICE
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
INNER JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
ON 
	E.ENTERTAINERID = ENT.ENTERTAINERID
;

# QUESTION 14
SELECT
	DISTINCT
	ENT.*
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
INNER JOIN
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS C
ON
	E.CUSTOMERID = C.CUSTOMERID
INNER JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
ON 
	E.ENTERTAINERID = ENT.ENTERTAINERID
WHERE
	(UPPER(C.CUSTLASTNAME) = "HALLMARK") OR
    (UPPER(C.CUSTLASTNAME) = "BERG");
    
# QUESTION 18
SELECT
	ENT.*
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON 
	E.ENTERTAINERID = ENT.ENTERTAINERID
WHERE
	E.ENTERTAINERID IS NULL;

# QUESTION 19
SELECT
	*
FROM
	ENTERTAINMENTAGENCYEXAMPLE.MUSICAL_STYLES M
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.MUSICAL_PREFERENCES P
ON
	M.STYLEID = P.STYLEID
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS C
ON 
	P.CUSTOMERID = C.CUSTOMERID;

# QUESTION 20
SELECT
A.*
FROM
	ENTERTAINMENTAGENCYEXAMPLE.AGENTS A
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON
	E.AGENTID = A.AGENTID
LEFT JOIN
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
ON 
	E.ENTERTAINERID = ENT.ENTERTAINERID
WHERE
	ENT.ENTERTAINERID IS NULL;

# QUESTION 21
SELECT
	DISTINCT
	C.*
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS C
LEFT JOIN
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON
	E.CUSTOMERID = C.CUSTOMERID
WHERE
	E.CUSTOMERID IS NULL;

#QUESTION 22
SELECT
DISTINCT *
FROM
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON
	E.ENTERTAINERID = ENT.ENTERTAINERID;

#QUESTION 23
SELECT
	"Customer" AS ROWTYPE
    ,CUSTOMERID
    ,CONCAT(CUSTFIRSTNAME, " ", CUSTLASTNAME) AS NAME
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS
UNION ALL
SELECT
	"Entertainer" AS ROWTYPE
    ,ENTERTAINERID
    ,ENTSTAGENAME
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS;

#OR

SELECT
	DISTINCT C.* , ENT.*
FROM 	
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS C
LEFT JOIN
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON
	E.CUSTOMERID = C.CUSTOMERID
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
ON 
	E.ENTERTAINERID = ENT.ENTERTAINERID
UNION
SELECT
	DISTINCT C.* , ENT.*
FROM 	
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
LEFT JOIN
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON
	E.ENTERTAINERID = ENT.ENTERTAINERID
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS C
ON 
	E.CUSTOMERID = C.CUSTOMERID
	;

#QUESTION 24
SELECT
	"Customer" AS ROWTYPE
    ,C.CUSTOMERID
    ,CONCAT(C.CUSTFIRSTNAME, " ", C.CUSTLASTNAME)
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS C
INNER JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.MUSICAL_PREFERENCES CMP
ON
	CMP.CUSTOMERID = C.CUSTOMERID
INNER JOIN
	ENTERTAINMENTAGENCYEXAMPLE.MUSICAL_STYLES CMS
ON
	CMS.STYLEID = CMP.STYLEID
WHERE
	UPPER(CMS.STYLENAME) = "CONTEMPORARY"
UNION ALL
SELECT
	"Entertainer" AS ROWTYPE
    ,ENT.ENTERTAINERID
    ,ENT.ENTSTAGENAME
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT
INNER JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINER_STYLES EMP
ON
	EMP.ENTERTAINERID = ENT.ENTERTAINERID
INNER JOIN
	ENTERTAINMENTAGENCYEXAMPLE.MUSICAL_STYLES EMS
ON
	EMS.STYLEID = EMP.STYLEID
WHERE
	UPPER(EMS.STYLENAME) = "CONTEMPORARY";

#OR

SELECT
	DISTINCT C.* , ENT.*
FROM 	
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS C
INNER JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.MUSICAL_PREFERENCES CMP
ON
	CMP.CUSTOMERID = C.CUSTOMERID
INNER JOIN
	ENTERTAINMENTAGENCYEXAMPLE.MUSICAL_STYLES CMS
ON
	CMS.STYLEID = CMP.STYLEID
LEFT JOIN
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON
	E.CUSTOMERID = C.CUSTOMERID
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
ON 
	E.ENTERTAINERID = ENT.ENTERTAINERID
WHERE
	UPPER(CMS.STYLENAME) = "CONTEMPORARY"
UNION
SELECT
	DISTINCT C.* , ENT.*
FROM 	
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
INNER JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINER_STYLES EMP
ON
	EMP.ENTERTAINERID = ENT.ENTERTAINERID
INNER JOIN
	ENTERTAINMENTAGENCYEXAMPLE.MUSICAL_STYLES EMS
ON
	EMS.STYLEID = EMP.STYLEID
LEFT JOIN
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON
	E.ENTERTAINERID = ENT.ENTERTAINERID
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.CUSTOMERS C
ON 
	E.CUSTOMERID = C.CUSTOMERID
WHERE
	UPPER(EMS.STYLENAME) = "CONTEMPORARY"
	;

#QUESTION 25
SELECT
	"Agent" AS ROWTYPE
    ,AGENTID
    ,CONCAT(AGTFIRSTNAME, " ", AGTLASTNAME) AS NAME
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.AGENTS
UNION ALL
SELECT
	"Entertainer" AS ROWTYPE
    ,ENTERTAINERID
    ,ENTSTAGENAME
FROM 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS;
# OR
SELECT
	DISTINCT A.* , ENT.*
FROM 	
	ENTERTAINMENTAGENCYEXAMPLE.AGENTS A
LEFT JOIN
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON
	A.AGENTID = E.AGENTID
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
ON 
	E.ENTERTAINERID = ENT.ENTERTAINERID
UNION
SELECT
	DISTINCT A.* , ENT.*
FROM 	
	ENTERTAINMENTAGENCYEXAMPLE.ENTERTAINERS ENT 
LEFT JOIN
	ENTERTAINMENTAGENCYEXAMPLE.ENGAGEMENTS E
ON
	E.ENTERTAINERID = ENT.ENTERTAINERID
LEFT JOIN 
	ENTERTAINMENTAGENCYEXAMPLE.AGENTS A
ON 
	E.AGENTID = A.AGENTID;
	
    
### ACCOUNTS PAYABLE 
# QUESTION 1
SELECT
	*
FROM 	
	ACCOUNTSPAYABLE.INVOICES;

# QUESTION 2
SELECT
	INVOICE_NUMBER
    ,INVOICE_DATE
    ,INVOICE_TOTAL
FROM 	
	ACCOUNTSPAYABLE.INVOICES
ORDER BY
	INVOICE_TOTAL DESC;

# QUESTION 3
SELECT
	*
FROM 	
	ACCOUNTSPAYABLE.INVOICES
WHERE
	INVOICE_DATE >= "2014-06-01";

SELECT
	*
FROM 	
	ACCOUNTSPAYABLE.INVOICES
WHERE
	MONTH(INVOICE_DATE) = 6;



# QUESTION 4
SELECT
	*
FROM 	
	ACCOUNTSPAYABLE.VENDORS
ORDER BY
	VENDOR_CONTACT_LAST_NAME
    ,VENDOR_CONTACT_FIRST_NAME;

# QUESTION 5
SELECT
	VENDOR_CONTACT_LAST_NAME
    ,VENDOR_CONTACT_FIRST_NAME
FROM 	
	ACCOUNTSPAYABLE.VENDORS
WHERE
	UPPER(VENDOR_CONTACT_LAST_NAME) LIKE "A%" OR
    UPPER(VENDOR_CONTACT_LAST_NAME) LIKE "B%" OR
    UPPER(VENDOR_CONTACT_LAST_NAME) LIKE "C%" OR
    UPPER(VENDOR_CONTACT_LAST_NAME) LIKE "E%" 
ORDER BY
	VENDOR_CONTACT_LAST_NAME
    ,VENDOR_CONTACT_FIRST_NAME;

# QUESTION 6
SELECT
	INVOICE_DUE_DATE
    ,INVOICE_TOTAL + (0.1*INVOICE_TOTAL) AS INCREASED_INVOICE_TOTAL
FROM
	ACCOUNTSPAYABLE.INVOICES
WHERE
	INVOICE_TOTAL >= 500 AND 
    INVOICE_TOTAL <= 1000
ORDER BY
	INVOICE_DUE_DATE DESC
	;

#QUESTION 7
SELECT 
	INVOICE_NUMBER
    ,INVOICE_TOTAL
    ,PAYMENT_TOTAL + CREDIT_TOTAL AS PAYMENT_CREDIT_TOTAL
    ,INVOICE_TOTAL-PAYMENT_TOTAL-CREDIT_TOTAL AS BALANCE_DUE
FROM 	
	ACCOUNTSPAYABLE.INVOICES
WHERE
	(INVOICE_TOTAL-PAYMENT_TOTAL-CREDIT_TOTAL) > 50
ORDER BY
	(INVOICE_TOTAL-PAYMENT_TOTAL) DESC
LIMIT 5;

# QUESTION 8

SELECT 
	*
    ,INVOICE_TOTAL-PAYMENT_TOTAL-CREDIT_TOTAL AS BALANCE_DUE
FROM 	
	ACCOUNTSPAYABLE.INVOICES
WHERE
	(INVOICE_TOTAL-PAYMENT_TOTAL-CREDIT_TOTAL) > 0;

# QUESTION 9
SELECT 
	DISTINCT
	V.VENDOR_NAME
    ,V.VENDOR_CONTACT_LAST_NAME
    ,V.VENDOR_CONTACT_FIRST_NAME
FROM 	
	ACCOUNTSPAYABLE.INVOICES I
INNER JOIN 
	ACCOUNTSPAYABLE.VENDORS V
ON 
	I.VENDOR_ID = V.VENDOR_ID
WHERE
	(INVOICE_TOTAL-PAYMENT_TOTAL-CREDIT_TOTAL) > 0;
    
# QUESTION 10
SELECT
	*
FROM 	
	ACCOUNTSPAYABLE.VENDORS V
INNER JOIN 
	ACCOUNTSPAYABLE.GENERAL_LEDGER_ACCOUNTS A
ON 
	V.DEFAULT_ACCOUNT_NUMBER = A.ACCOUNT_NUMBER;

# QUESTION 11
SELECT
	*
FROM 	
	ACCOUNTSPAYABLE.INVOICES I
INNER JOIN 
	ACCOUNTSPAYABLE.INVOICE_LINE_ITEMS T
ON 
	I.INVOICE_ID = T.INVOICE_ID
INNER JOIN 
	ACCOUNTSPAYABLE.VENDORS V
ON 
	I.VENDOR_ID = V.VENDOR_ID;

# QUESTION 12
SELECT
	A.*
FROM
	ACCOUNTSPAYABLE.VENDORS A 
INNER JOIN 
	ACCOUNTSPAYABLE.VENDORS B
ON 
	UPPER(A.VENDOR_CONTACT_LAST_NAME) = UPPER(B.VENDOR_CONTACT_LAST_NAME)
AND 
	A.VENDOR_ID != B.VENDOR_ID;

#QUESTION 13
SELECT
	GL.*
FROM 
	ACCOUNTSPAYABLE.GENERAL_LEDGER_ACCOUNTS GL
LEFT JOIN
	ACCOUNTSPAYABLE.INVOICE_LINE_ITEMS I
ON 
	GL.ACCOUNT_NUMBER = I.ACCOUNT_NUMBER
WHERE
	I.ACCOUNT_NUMBER IS NULL
ORDER BY 
	GL.ACCOUNT_NUMBER;

#QUESTION 14
SELECT
	VENDOR_NAME
    ,VENDOR_STATE
FROM 	
	ACCOUNTSPAYABLE.VENDORS
WHERE
	UPPER(VENDOR_STATE) = "CA"
UNION 
SELECT
	VENDOR_NAME
    ,"Outside CA" 
FROM 	
	ACCOUNTSPAYABLE.VENDORS
WHERE
	UPPER(VENDOR_STATE) != "CA"

ORDER BY VENDOR_NAME;

SELECT
	VENDOR_NAME
    ,CASE 	
		WHEN UPPER(VENDOR_STATE) = "CA" THEN "CA"
        ELSE "Outside CA" 
	END AS VENDOR_STATE
FROM 	
	ACCOUNTSPAYABLE.VENDORS
ORDER BY
	VENDOR_NAME;
    




    
    
	
